
# commit 방법
# 
# 1. 원하는 커밋 리스트의 주석을 해제한다.
# 2. 기존 설명 삭제 후 설명을 작성한다.
# 3. 수정한 파일을 저장한다.
# 4. commit될 변경파일을 확인한다.
#    하단에 Changes to be commited 목록이 생성됨
# 5. 브랜치를 확인한다.
#    하단에 On branch <브랜치명> 생성됨
# 6. 터미널에서 ctrl+c
# 7. 터미널에서 git push
#
# commit 예시
# 🚨 [Fix] 이벤트 버그 수정
#

#   [커밋 타입]  리스트
#   ✨ [Feat] 
#    ㄴ> 새로운 기능 추가, 새로운 페이지 생성
#   🚨 [Fix] 
#    ㄴ> 버그 수정
#   📃 [Docs] 
#    ㄴ> 문서 수정, jsDoc 추가 및 수정
#   ♻️ [Refactor] 
#    ㄴ> 코드 리펙토링(콘솔 로그 제거)
#   🚧 [Test] 
#    ㄴ> 테스트(테스트 코드 추가, 수정, 삭제, 비즈니스 로직에 변경이 없는 경우)
#   ⚒️ [Chore] 
#    ㄴ> 세팅 상의 자잘한 수정이나 빌드 업데이트 (빌드 스크립트 수정, 패키지 매니저 등)
#   💄 [CSS] 
#    ㄴ> CSS 등 사용자 UI 디자인 변경
#   📝 [Comment] 
#    ㄴ> 필요한 주석 추가 및 변경, 이전 기록용 주석 제거, 주석 관련 모든것
#   🔥 [Init] 
#    ㄴ> 프로젝트 초기 생성 혹은 신규 페이지 및 이벤트 초기 생성
#   ➕ [Addfile] 
#    ㄴ> 이미지 등 파일을 신규로 추가 할 경우
#  
#  🚨branch위치와 commit되는 변경파일 필수 체크🚨
#  